diff -uraN wine-src/dlls/ntdll/unix/esync.c b/dlls/ntdll/unix/esync.c
--- wine-src/dlls/ntdll/unix/esync.c	2024-01-15 04:26:12.000000000 -0500
+++ b/dlls/ntdll/unix/esync.c	2024-01-15 06:27:30.967565423 -0500
@@ -97,7 +97,8 @@
 };
 C_ASSERT(sizeof(struct event) == 8);
 
-static char shm_name[29];
+static char shm_name[200];
+static int darkosx_esync;
 static int shm_fd;
 static void **shm_addrs;
 static int shm_addrs_size;  /* length of the allocated shm_addrs array */
@@ -1332,13 +1332,25 @@
 
     if (stat( config_dir, &st ) == -1)
         ERR("Cannot stat %s\n", config_dir);
-
-    if (st.st_ino != (unsigned long)st.st_ino)
-        sprintf( shm_name, "/wine-%lx%08lx-esync", (unsigned long)((unsigned long long)st.st_ino >> 32), (unsigned long)st.st_ino );
+
+	darkosx_esync = getenv("WINEESYNC_DARKOSX") && atoi(getenv("WINEESYNC_DARKOSX"));
+
+	if (darkosx_esync)
+	{
+    	if (st.st_ino != (unsigned long)st.st_ino)
+        	sprintf( shm_name, "/data/data/com.darkos.x11/files/usr/tmp/wine-%lx%08lx-esync", (unsigned long)((unsigned long long)st.st_ino >> 32), (unsigned long)st.st_ino );
+    	else
+        	sprintf( shm_name, "/data/data/com.darkos.x11/files/usr/tmp/wine-%lx-esync", (unsigned long)st.st_ino );
+    }
     else
-        sprintf( shm_name, "/wine-%lx-esync", (unsigned long)st.st_ino );
+    {
+    	if (st.st_ino != (unsigned long)st.st_ino)
+        	sprintf( shm_name, "/wine-%lx%08lx-esync", (unsigned long)((unsigned long long)st.st_ino >> 32), (unsigned long)st.st_ino );
+    	else
+        	sprintf( shm_name, "/wine-%lx-esync", (unsigned long)st.st_ino );
+    }
 
-    if ((shm_fd = shm_open( shm_name, O_RDWR, 0644 )) == -1)
+    if ((darkosx_esync && (shm_fd = open( shm_name, O_RDWR, 0644 )) == -1) || (!darkosx_esync && (shm_fd = shm_open( shm_name, O_RDWR, 0644 )) == -1))
     {
         /* probably the server isn't running with WINEESYNC, tell the user and bail */
         if (errno == ENOENT)
diff -uraN wine-src/server/esync.c b/server/esync.c
--- wine-src/server/esync.c	2024-01-15 04:26:14.000000000 -0500
+++ b/server/esync.c	2024-01-15 06:27:55.759726857 -0500
@@ -59,17 +59,18 @@
 #endif
 }
 
-static char shm_name[29];
+static char shm_name[200];
 static int shm_fd;
 static off_t shm_size;
 static void **shm_addrs;
 static int shm_addrs_size;  /* length of the allocated shm_addrs array */
 static long pagesize;
+static int darkosx_esync;
 
 static void shm_cleanup(void)
 {
     close( shm_fd );
-    if (shm_unlink( shm_name ) == -1)
+    if ((darkosx_esync && unlink( shm_name ) == -1) || (!darkosx_esync && shm_unlink( shm_name ) == -1))
         perror( "shm_unlink" );
 }
 
@@ -79,15 +80,27 @@
 
     if (fstat( config_dir_fd, &st ) == -1)
         fatal_error( "cannot stat config dir\n" );
+
+    darkosx_esync = getenv("WINEESYNC_DARKOSX") && atoi(getenv("WINEESYNC_DARKOSX"));
 
-    if (st.st_ino != (unsigned long)st.st_ino)
-        sprintf( shm_name, "/wine-%lx%08lx-esync", (unsigned long)((unsigned long long)st.st_ino >> 32), (unsigned long)st.st_ino );
+    if (darkosx_esync)
+	{
+    	if (st.st_ino != (unsigned long)st.st_ino)
+        	sprintf( shm_name, "/data/data/com.darkos.x11/files/usr/tmp/wine-%lx%08lx-esync", (unsigned long)((unsigned long long)st.st_ino >> 32), (unsigned long)st.st_ino );
+    	else
+        	sprintf( shm_name, "/data/data/com.darkos.x11/files/usr/tmp/wine-%lx-esync", (unsigned long)st.st_ino );
+        unlink( shm_name );
+        shm_fd = open( shm_name, O_RDWR | O_CREAT | O_EXCL, 0644 );
+    }
     else
-        sprintf( shm_name, "/wine-%lx-esync", (unsigned long)st.st_ino );
-
-    shm_unlink( shm_name );
-
-    shm_fd = shm_open( shm_name, O_RDWR | O_CREAT | O_EXCL, 0644 );
+    {
+    	if (st.st_ino != (unsigned long)st.st_ino)
+        	sprintf( shm_name, "/wine-%lx%08lx-esync", (unsigned long)((unsigned long long)st.st_ino >> 32), (unsigned long)st.st_ino );
+    	else
+        	sprintf( shm_name, "/wine-%lx-esync", (unsigned long)st.st_ino );
+        shm_unlink( shm_name );
+        shm_fd = shm_open( shm_name, O_RDWR | O_CREAT | O_EXCL, 0644 );
+    }
     if (shm_fd == -1)
         perror( "shm_open" );
 
 
